# This is an example PKGBUILD file. Use this as a start to creating your own,
# and remove these comments. For more information, see 'man PKGBUILD'.
# NOTE: Please fill out the license field for your package! If it is unknown,
# then please put 'unknown'.

# The following guidelines are specific to BZR, GIT, HG and SVN packages.
# Other VCS sources are not natively supported by makepkg yet.

# Maintainer: Your Name <youremail@domain.com>
pkgname=tinyb-git # '-bzr', '-git', '-hg' or '-svn'
pkgrel=1
pkgver='0.5.1'
pkgdesc="TinyB exposes the BLE GATT API for C++, Java and other languages, using BlueZ over DBus."
arch=('any')
url="https://github.com/intel-iot-devkit/tinyb"
license=('MIT')
groups=()
depends=('bluez')
makedepends=('git' 'cmake' 'doxygen') # 'bzr', 'git', 'mercurial' or 'subversion'
provides=("${pkgname%-git}")
conflicts=("${pkgname%-git}")
replaces=()
backup=()
options=()
install=
source=('tinyb::git+https://github.com/intel-iot-devkit/tinyb.git')
noextract=()
md5sums=('SKIP')
VCS='git'

# Please refer to the 'USING VCS SOURCES' section of the PKGBUILD man page for
# a description of each element in the source array.

# pkgver() {
# 	cd "$srcdir/${pkgname%-git}"
# 
# The examples below are not absolute and need to be adapted to each repo. The
# primary goal is to generate version numbers that will increase according to
# pacman's version comparisons with later commits to the repo. The format
# VERSION='VER_NUM.rREV_NUM.HASH', or a relevant subset in case VER_NUM or HASH
# are not available, is recommended.
# 
# Bazaar
# 	printf "r%s" "$(bzr revno)"
# 
# Git, tags available
# 	printf "%s" "$(git describe --long | sed 's/\([^-]*-\)g/r\1/;s/-/./g')"
# 
# Git, no tags available
# 	printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
# 
# Mercurial
# 	printf "r%s.%s" "$(hg identify -n)" "$(hg identify -i)"
# 
# Subversion
# 	printf "r%s" "$(svnversion | tr -d 'A-z')"
# }



build() {
	echo $CFLAGS
	cd "$srcdir/${pkgname%-git}"
	mkdir -p build
	cd build
	cmake -DCMAKE_INSTALL_PREFIX=/usr ..
	make
}


package() {
	cd "$srcdir/${pkgname%-git}"
	install -Dm644 COPYING "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
	cd build
	make DESTDIR="$pkgdir/" install
}
